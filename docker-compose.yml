# Documentation
# https://docs.docker.com/compose/compose-file

version: '3.7'

services:

  rabbitmq:
    image: rabbitmq:3.9-management
    restart: always
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mss-declan

  zipkin:
    image: openzipkin/zipkin:2.23
    restart: always
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - RABBIT_ADDRESSES=rabbitmq:5672
    networks:
      - mss-declan
    depends_on:
      - rabbitmq
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  eureka-server:
    image: eureka-server
    restart: always
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - mss-declan
    depends_on:
      - rabbitmq
      - zipkin
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"
      
  zuul-server:
    image: zuul-server
    restart: always
    container_name: zuul-server
    ports:
      - "8765:8765"
    networks:
      - mss-declan
    depends_on:
      - eureka-server
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  auth-server:
    image: auth-service
    restart: always
    container_name: auth-service
    ports:
      - "9999:9999"
    networks:
      - mss-declan
    depends_on:
      - eureka-server
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  product-service:
    image: product-service
    restart: always
    container_name: product-service
    networks:
      - mss-declan
    depends_on:
      - eureka-server
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  recommendation-service:
    image: recommendation-service
    restart: always
    container_name: recommendation-service
    networks:
      - mss-declan
    depends_on:
      - eureka-server
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"


  review-service:
    image: review-service
    restart: always
    container_name: review-service
    networks:
      - mss-declan
    depends_on:
      - eureka-server
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  product-composite-service:
    image: product-composite-service
    restart: always
    container_name: product-composite-service
    networks:
      - mss-declan
    depends_on:
      - eureka-server
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - mss-declan

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - "xpack.security.enabled=false"
    depends_on:
      - elasticsearch
    networks:
      - mss-declan

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    container_name: logstash
    ports:
      - "25826:25826"
    volumes:
      - $PWD/elk-config:/elk-config
    command: logstash -f /elk-config/logstash.config
    depends_on:
      - elasticsearch
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - mss-declan
      
networks:
  mss-declan:
    driver: bridge
